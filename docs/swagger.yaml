basePath: /api/v1
definitions:
  models.CarResponseByGetByBrandIsEngine:
    properties:
      car:
        $ref: '#/definitions/models.CarSwagger'
      engine:
        properties:
          carID:
            example: a123c456-78de-90fg-1234-h567ijkl8901
            type: string
          carRange:
            example: 300-400 miles
            type: string
          displacement:
            example: 3.5
            type: number
          engineID:
            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            type: string
          noOfCylinders:
            example: 6
            type: integer
        type: object
    type: object
  models.CarResponseByGetByID:
    properties:
      car:
        $ref: '#/definitions/models.SuccessResponseCarSwagger'
      engine:
        properties:
          carID:
            example: a123c456-78de-90fg-1234-h567ijkl8901
            type: string
          carRange:
            example: 300-400 miles
            type: string
          displacement:
            example: 3.5
            type: number
          engineID:
            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            type: string
          noOfCylinders:
            example: 6
            type: integer
        type: object
    type: object
  models.CarSwagger:
    description: Represents the details of a car
    properties:
      brand:
        example: Tesla
        type: string
      createdAt:
        example: "2025-01-01T12:00:00Z"
        type: string
      fuelType:
        example: Electric
        type: string
      id:
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
      name:
        example: Tesla Model S
        type: string
      price:
        example: 79999.99
        type: number
      updatedAt:
        example: "2025-01-01T12:00:00Z"
        type: string
      year:
        example: "2022"
        type: string
    type: object
  models.EngineSwagger:
    description: Represents the details of a Enigne
    properties:
      carID:
        example: a123c456-78de-90fg-1234-h567ijkl8901
        type: string
      carRange:
        example: 300-400 miles
        type: string
      displacement:
        example: 3.5
        type: number
      engineID:
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
      noOfCylinders:
        example: 6
        type: integer
    type: object
  models.ErrorResponseCarSwagger:
    properties:
      code:
        example: 400
        type: integer
      error:
        example: Detailed error message
        type: string
      message:
        example: Error message
        type: string
      status:
        example: error
        type: string
    type: object
  models.ErrorResponseEngineSwagger:
    properties:
      code:
        example: 200
        type: integer
      error:
        example: Error details
        type: string
      message:
        example: 'Error message '
        type: string
      status:
        example: error or failed to validation request data or server error
        type: string
    type: object
  models.SuccessResponseCarSwagger:
    properties:
      code:
        example: 200
        type: integer
      data:
        properties:
          brand:
            example: Tesla
            type: string
          createdAt:
            example: "2025-01-01T12:00:00Z"
            type: string
          fuelType:
            example: Electric
            type: string
          id:
            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            type: string
          name:
            example: Tesla Model S
            type: string
          price:
            example: 79999.99
            type: number
          updatedAt:
            example: "2025-01-01T12:00:00Z"
            type: string
          year:
            example: "2022"
            type: string
        type: object
      message:
        example: Success message
        type: string
      status:
        example: success
        type: string
    type: object
  models.SuccessResponseEngineSwagger:
    properties:
      code:
        example: 200
        type: integer
      data:
        properties:
          carID:
            example: a123c456-78de-90fg-1234-h567ijkl8901
            type: string
          carRange:
            example: 300-400 miles
            type: string
          displacement:
            example: 3.5
            type: number
          engineID:
            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            type: string
          noOfCylinders:
            example: 6
            type: integer
        type: object
      message:
        example: 'Success message '
        type: string
      status:
        example: success
        type: string
    type: object
  routers.HealthCheckResponse:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      error: {}
      message:
        example: Server is running and healthy
        type: string
      status:
        example: healthy
        type: string
    type: object
host: http://localhost:8090
info:
  contact:
    email: sanjaygupta07054@gmailcom
    name: Support Team
    url: https://carveo.com/support
  description: API documentation for Carevo, a car management system for tracking,
    servicing, and managing vehicles.
  termsOfService: https://carveo.com/terms
  title: Carevo Car Management API Documentation
  version: 1.0.0
paths:
  /cars/createCar:
    post:
      consumes:
      - application/json
      description: Create a new car with the input payload. This endpoint allows you
        to add a car to the database.
      parameters:
      - description: Car Request
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/models.CarSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Car created successfully
          schema:
            $ref: '#/definitions/models.SuccessResponseCarSwagger'
        "400":
          description: Invalid input fields or JSON format
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
      summary: Create a new car
      tags:
      - Car
  /cars/deleteCar/{carID}:
    delete:
      consumes:
      - application/json
      description: Delete a car with the input payload. This endpoint allows you to
        delete a car in the database.
      parameters:
      - description: ID of the car to delete
        in: path
        name: carID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Car deleted successfully
          schema:
            type: string
        "400":
          description: Invalid input fields or JSON format
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
      summary: Delete a car
      tags:
      - Car
  /cars/getAllCars:
    get:
      description: Retrieve all cars from the database
      produces:
      - application/json
      responses:
        "200":
          description: All cars retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.SuccessResponseCarSwagger'
            type: array
        "404":
          description: No cars found
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
      summary: Get all cars
      tags:
      - Car
  /cars/getCarByBrand/{brandName}/{isEngine}:
    get:
      description: Retrieve car by brand name and engine type from the database
      parameters:
      - description: Brand name of the car to retrieve
        in: path
        name: brandName
        required: true
        type: string
      - description: Engine type of the car
        in: path
        name: isEngine
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Car retrieved successfully by only brand name without engine
            type
          schema:
            $ref: '#/definitions/models.SuccessResponseCarSwagger'
        "404":
          description: No car found
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
      summary: Get car by brand name and engine type
      tags:
      - Car
  /cars/getCarByID/{carID}:
    get:
      description: Retrieve car by ID from the database
      parameters:
      - description: ID of the car to retrieve
        in: path
        name: carID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Car retrieved successfully by ID
          schema:
            $ref: '#/definitions/models.CarResponseByGetByID'
        "404":
          description: No car found
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
      summary: Get car by ID
      tags:
      - Car
  /cars/updateCar/{carID}:
    patch:
      consumes:
      - application/json
      description: Update a car with the input payload. This endpoint allows you to
        update a car in the database.
      parameters:
      - description: ID of the car to update
        in: path
        name: carID
        required: true
        type: string
      - description: Car Request
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/models.CarSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: Car updated successfully
          schema:
            $ref: '#/definitions/models.SuccessResponseCarSwagger'
        "400":
          description: Invalid input fields or JSON format
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseCarSwagger'
      summary: Update a car
      tags:
      - Car
  /engiens/createEngine{carID}/:
    post:
      consumes:
      - application/json
      description: Create Engine for a Car by Car ID
      parameters:
      - description: Car ID
        in: path
        name: carID
        required: true
        type: string
      - description: Engine Request
        in: body
        name: engine
        required: true
        schema:
          $ref: '#/definitions/models.EngineSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Engine created successfully
          schema:
            $ref: '#/definitions/models.SuccessResponseEngineSwagger'
        "400":
          description: Invalid input fields or JSON format
          schema:
            $ref: '#/definitions/models.ErrorResponseEngineSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseEngineSwagger'
      summary: Create Engine for a Car
      tags:
      - Engine
  /engines/deleteEngine/{engineID}:
    delete:
      consumes:
      - application/json
      description: Delete Engine by Engine ID
      parameters:
      - description: Engine ID
        in: path
        name: engineID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Engine deleted successfully
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseEngineSwagger'
      summary: Delete Engine
      tags:
      - Engine
  /engines/getAllEngines:
    get:
      consumes:
      - application/json
      description: Endpoint to get all engines
      produces:
      - application/json
      responses:
        "200":
          description: All engines retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.SuccessResponseEngineSwagger'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseEngineSwagger'
      summary: Get All Engines
      tags:
      - Engine
  /engines/getEngineByID/{engineID}:
    get:
      consumes:
      - application/json
      description: Get Engine by Engine ID
      parameters:
      - description: Engine ID
        in: path
        name: engineID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Engine retrieved successfully
          schema:
            $ref: '#/definitions/models.SuccessResponseEngineSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseEngineSwagger'
      summary: Get Engine by ID
      tags:
      - Engine
  /engines/updateEngine/{engineID}:
    patch:
      consumes:
      - application/json
      description: Update Engine by Engine ID
      parameters:
      - description: Engine ID
        in: path
        name: engineID
        required: true
        type: string
      - description: Engine Request
        in: body
        name: engine
        required: true
        schema:
          $ref: '#/definitions/models.EngineSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: Engine updated successfully
          schema:
            $ref: '#/definitions/models.SuccessResponseEngineSwagger'
        "400":
          description: Invalid input fields or JSON format
          schema:
            $ref: '#/definitions/models.ErrorResponseEngineSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponseEngineSwagger'
      summary: Update Engine
      tags:
      - Engine
  /health:
    get:
      description: Provides a simple health check to verify the server's operational
        status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routers.HealthCheckResponse'
      summary: Health Check Endpoint
      tags:
      - Health
securityDefinitions:
  CarveoAPIKey:
    description: 'JWT token required to access endpoints. Add the token in the "Authorization"
      header in the format: Bearer <JWT_TOKEN>.'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Endpoints related to car operations.
  name: Car Management
